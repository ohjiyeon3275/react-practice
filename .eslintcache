[{"/Users/ohjiyeon/Documents/react-practice/react-cart/src/index.tsx":"1","/Users/ohjiyeon/Documents/react-practice/react-cart/src/App.tsx":"2","/Users/ohjiyeon/Documents/react-practice/react-cart/src/App.styles.ts":"3","/Users/ohjiyeon/Documents/react-practice/react-cart/src/item/Item.tsx":"4","/Users/ohjiyeon/Documents/react-practice/react-cart/src/item/Item.style.ts":"5"},{"size":494,"mtime":1650714587917,"results":"6","hashOfConfig":"7"},{"size":1818,"mtime":1650713377300,"results":"8","hashOfConfig":"7"},{"size":77,"mtime":1650713875596,"results":"9","hashOfConfig":"7"},{"size":605,"mtime":1650713443683,"results":"10","hashOfConfig":"7"},{"size":482,"mtime":1650630785327,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qo6i8",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/ohjiyeon/Documents/react-practice/react-cart/src/index.tsx",[],"/Users/ohjiyeon/Documents/react-practice/react-cart/src/App.tsx",["24","25","26","27","28","29"],"import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\n\n//components\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\n//styles (styled component)\nimport { Wrapper } from './App.styles';\nimport Item from './item/Item';\n\n//Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\n// https://fakestoreapi.com/\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json()\n  // the reason why i put `await` twice : json\n\nconst App = () => {\n\n  const [ cartOpen, setCartOpen ] = useState(false);\n  const [ cartItems, setCartItems ] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products', \n    getProducts\n  );\n\n  console.log(data)\n\n  const getTotalItems = () => null\n\n  const handleAddToCart = (clickedItem: CartItemType) => null\n\n  const handleRemoveFromCart = () => null\n\n  if (isLoading) return <LinearProgress/>\n\n  if (error) return <div> our mission was to graze the dust in search of a mystery stripped of anything serious </div>\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        Cart Goes Here~\n      </Drawer>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n",["30","31"],"/Users/ohjiyeon/Documents/react-practice/react-cart/src/App.styles.ts",[],"/Users/ohjiyeon/Documents/react-practice/react-cart/src/item/Item.tsx",[],"/Users/ohjiyeon/Documents/react-practice/react-cart/src/item/Item.style.ts",[],{"ruleId":"32","severity":1,"message":"33","line":8,"column":8,"nodeType":"34","messageId":"35","endLine":8,"endColumn":27},{"ruleId":"32","severity":1,"message":"36","line":9,"column":8,"nodeType":"34","messageId":"35","endLine":9,"endColumn":13},{"ruleId":"32","severity":1,"message":"37","line":34,"column":11,"nodeType":"34","messageId":"35","endLine":34,"endColumn":20},{"ruleId":"32","severity":1,"message":"38","line":34,"column":22,"nodeType":"34","messageId":"35","endLine":34,"endColumn":34},{"ruleId":"32","severity":1,"message":"39","line":42,"column":9,"nodeType":"34","messageId":"35","endLine":42,"endColumn":22},{"ruleId":"32","severity":1,"message":"40","line":46,"column":9,"nodeType":"34","messageId":"35","endLine":46,"endColumn":29},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},"@typescript-eslint/no-unused-vars","'AddShoppingCartIcon' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'cartItems' is assigned a value but never used.","'setCartItems' is assigned a value but never used.","'getTotalItems' is assigned a value but never used.","'handleRemoveFromCart' is assigned a value but never used.","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-global-assign","no-unsafe-negation"]